version: v2
kind: simloud-deployment
name: kube-service-3
type: kubernetes
mode: advanced
#image:

cloud_resources:
  - name: db_1
    env_name_prefix: ENVDB1
    type: rds
    params:
      DBName: postgres_test
      MasterUsername: postgresmaster
      MasterUserPassword: 47379dc6-c120-pwd

  - name: ddb_1               # <resource-name>
    env_name_prefix: ENVDDB1  # <environment-variable-name>
    type: dynamodb           # <resource-type>
    params:                  # block of advanced parameters
      AttributeDefinitions:
        - AttributeName: a
          AttributeType: S
      KeySchema:
        - AttributeName: a
          KeyType: HASH

  - name: kube3_s3_1
    env_name_prefix: S31
    type: s3

  - name: lambda-service-3.s3_1
    env_name_prefix: LAMBDAS31
    type: s3

  - name: lambda-service-3.db1_1
    env_name_prefix: LAMBDADB1
    type: s3

secrets:
  - path: secrets/customer1/data1
    env_name_prefix: CUSTENV1

environment:
  - env_name: ENVNAME1
    value: "Yahoo!"

external_api:
  sub_domain: "k8s"
  base_url: "/kube-service-3"
  base_domain: base.domain.name
  loadbalancer: aws_network
  protocol: tcp    # options: tcp, udp, tls, tcp_udp
  port: 80     # available 80 and 443 only
  redirects:
    http2https: true # by default enabled
  cors:
    enable_cors: true
    enable_cors: true  # default "false"
    cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"  # default "*"
    cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"  # default "*"
    cors-allow-origin: "*"
    cors-allow-credentials: false
    cors-max-age: 1728000
    #auth: # @v4.2.16
    # url: auth.demo.simloud.com    # default "" - empty string is disabled. set vouch domain .
    # sub_domain: auth              # <subdomain>.<base_domain> if auth.url is not set
    #type: basic                   # default “vouch”, to integrate via vouch.

internal_api:                     # @v4.2
  base_url: kube-service
  sub_domain: " "
  base_domain: base.domain.name
  loadbalancer: aws_network
  protocol: tcp    # options: tcp, udp, tls, tcp_udp
  port: 80     # available 80 and 443 only

service:
  name: kube-service-3
  namespace: default
  type: ClusterIP
  annotations: {}
  servicePort: 80
  podPort: 80
  specType: deployment
  options: # @v3.4.10
    sidecars:
      vault:
        enable: false
    timeouts: # @v4.2.17
      job_execute: 3600        # job spec execution timeout in sec
    job: # @v4.2.17 applicable only for job/cronjob type
      shell_command: “”        # default shell command
      cron: “*/1 * * * *”      # job cron execution. Only for cronjob type
      cron_concurrency: Allow  # Enable cron jobs concurrency: Allow/Forbid/Replace

spec:
  pod:
    name: kube-service-3
    replicas: 1
    strategy: # @v3.4.6
      type: Recreate # default “Recreate”
      rollingUpdate: # default empty
        maxSurge: 1                  # The number of pods that can be created above the desired amount of pods during an update
        maxUnavailable: 25%          # The number of pods that can be unavailable during the update process
    hascaler: # @v4.2
      enabled: false
      min: 1
      max: 10
      cpu_percent: 80
    containers:
      - name: container-name
        resources:
          requests:
            memory: "60Mi"
            cpu: "200m"
          limits:
            memory: "120Mi"
            cpu: "1000m"
