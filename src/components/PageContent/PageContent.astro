---
import type { Frontmatter } from '../../config'
import MoreMenu from '../RightSidebar/MoreMenu.astro'
import TableOfContents from '../RightSidebar/TableOfContents'
import type { MarkdownHeading } from 'astro'

type Props = {
  frontmatter: Frontmatter
  headings: MarkdownHeading[]
  githubEditUrl: string
}

const { frontmatter, headings, githubEditUrl } = Astro.props as Props
const title = frontmatter.title
---

<article id="article" class="content">
  <section class="main-section">
    <h1 class="content-title" id="overview">{title}</h1>
    <nav class="block sm:hidden">
      <TableOfContents client:media="(max-width: 50em)" headings={headings} />
    </nav>
    <div id="real-content">
      <div
        id="img-zoom-preview"
        class="hidden"
        style={{ display: 'none', backgroundImage: 'none' }}
      >
      </div>
      <slot />
    </div>
  </section>

  <nav class="block sm:hidden">
    <MoreMenu editHref={githubEditUrl} />
  </nav>
</article>

<style>
  .content {
    padding: 0;
    max-width: 100%;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .content > section {
    margin-bottom: 4rem;
  }

  .block {
    display: block;
  }

  @media (min-width: 50em) {
    .sm\:hidden {
      display: none;
    }
    .content {
      max-width: 75ch;
    }
  }
</style>

<script>
  const content = document.querySelector('#real-content') as HTMLElement
  const zoomPreview = document.querySelector('#img-zoom-preview') as HTMLImageElement

  const handleContentClick = e => {
    if (e.target.tagName === 'IMG') {
      const src = e.target.src

      zoomPreview.style.backgroundImage = `url(${src})`
      zoomPreview.style.display = 'block'
    }
  }

  content.addEventListener('click', handleContentClick)

  const exitZoom = e => {
    zoomPreview.style.backgroundImage = `none`
    zoomPreview.style.display = 'none'
  }

  zoomPreview.addEventListener('click', exitZoom)

  document.addEventListener('keydown', e => {
    if ((e.metaKey || e.ctrlKey) && e.key === 'f') {
      const showMoreBtns = [...document.querySelectorAll('.source-show-more')] as [
        HTMLElement
      ]
      showMoreBtns.map(el => el.click())
    }
  })
</script>
